#!/bin/bash

CATTLE_URL="http://rancher.example.com/v2-beta"
CATTLE_ACCESS_KEY="AAAAAAAAAAAAAAAAAAA"
CATTLE_SECRET_KEY="BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
SLEEP=5

echo "Updating haproxy image tag..."
projects=`curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X GET -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/projects/" | jq -r .data | jq '.[]' | jq '.id' | tr -d '"'`
for project in $projects
do
  echo "############################################################"
  echo "Working on project $project"
  loadbalancers=`curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X GET -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/projects/${project}/loadbalancerservices/" | jq -r .data | jq '.[]' | jq '.id' | tr -d '"'`
  for loadbalancer in $loadbalancers
  do
    echo "Working on loadbalancer $loadbalancer"
    CURRENT_CONFIG=`curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X GET -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/projects/${project}/loadbalancerservices/${loadbalancer}" | jq -r .`
    echo "Current config: $CURRENT_CONFIG"
    if [[ ! `echo $CURRENT_CONFIG | grep 'lb-service-haproxy:v0.9.14'` ]]
    then
      echo "Need to change image..."
      NEW_CONFIG=`echo $CURRENT_CONFIG | sed 's/lb-service-haproxy:v0.9.1/lb-service-haproxy:v0.9.14/g'`
      echo "New config: $NEW_CONFIG"
      echo "Updating config..."
curl -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" \
-X PUT \
-H 'Accept: application/json' \
-H 'Content-Type: application/json' \
-d "$NEW_CONFIG" \
"${CATTLE_URL}/projects/${project}/loadbalancerservices/${loadbalancer}"
      echo ""
      echo "Sleeping..."
      sleep $SLEEP
    else
      echo "No need to upgrade..."
    fi
  done
  echo "############################################################"
done


echo "Starting cleanup of old containers..."
containers=`curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X GET -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/containers?limit=2147483647" | jq -r .data | jq '.[]' | jq '.id' | tr -d '"'`
for container in $containers
do
  echo "id: $container"
  imageUuid=`curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X GET -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/containers/${container}" | jq -r .data | jq -r .fields | jq -r .imageUuid`
  if [[ `echo $imageUuid | grep 'lb-service-haproxy:v0.9.1'` ]]
  then
    echo "Need to delete"
    echo "imageUuid: $imageUuid"
    accountId=`curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X GET -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/containers/${container}" | jq -r .accountId`
    curl -s -u "${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY}" -X DELETE -H 'Accept: application/json' -H 'Content-Type: application/json' "${CATTLE_URL}/projects/${accountId}/containers/${container}"
    echo ""
    echo "Sleeping..."
    sleep $SLEEP
  fi
done
